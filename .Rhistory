8*.70 + 20(0.7+0.85+0.8) + 32*0.75
8*.70 + 20*(0.7+0.85+0.8) + 32*0.75
8*.70 + 20*(0.7+0.75+0.8) + 32*0.75
8*.70 + 20*(0.7+0.75+0.8) + 32*0.75
install.packages("GPfit")
library(GPfit)
n = 5; d = 1;
computer_simulator <- function(x){
x = 2*x+0.5;
y = sin(10*pi*x)/(2*x) + (x-1)^4;
return(y)
}
set.seed(3);
library(lhs);
x = maximinLHS(n,d);
y = computer_simulator(x);
GPmodel = GP_fit(x,y);
print(GPmodel)
GPmodel$Y_fit
GPmodel$Y_hat
names(GPmodel)
GPmodel$sig2
data(iris)
head(iris)
split(iris[,1],virginica)
split(iris[,c(1,5)],virginica)
iris[,c(1,5)]
head(iris)
split(iris[,c(1,5)],Species)
attach(iris)
split(iris[,c(1,5)],Species)
apply(split(iris[,c(1,5)],Species),mean)
sapply(split(iris[,c(1,5)],Species),mean)
split(iris[,1],Species)
apply(split(iris[,1],Species),mean)
?apply
sapply(split(iris[,1],Species),mean)
sapply(split(iris[,1:4],Species),mean)
apply(iris[,1:4],2,mean)
data(mtcars)
attach(mtcars)
head(mtcars)
split(mtcars[,1],cyl)
sapply(split(mtcars[,1],cyl),mean)
mean(c(4,4,4,3.3,3.3))
mean(c(4,4,4,3.3,3.3,4))
mean(c(4,4,4,4,3.7,3.7,3.3,4))
mean(c(4,4,4,4,3.7,3.7,3.3,4,4))
mean(c(4,4,4,4,3.7,3.7,3.3,4,4,4))
mean(c(4,4,4,4,3.7,3.7,3.7,4,4,4))
mean(c(4,4,4,4,3.7,3.7,3.3,4,4,4))
mean(c(2.7,4,3.7,4,4,4,3.7,4,4,4,4,3.7,3.3))
mean(c(2.7,4,3.7,4,4,4,3.7,4,4,4,4,3.7,3.3,4))
setwd("G:/Coursera Classes/04 Exploratory Data Analysis/Project1")
x = rnorm(100)
y = x + rnorm(100)
plot(x,y, type = "n")
g = gl(2,50, labels = c("Male","Female"))
points(x[g=="Male"],y[g=="Female"])
points(x[g=="Male"],y[g=="Male"])
plot(x,y, type = "n")
points(x[g=="Male"],y[g=="Male"])
points(x[g=="Female"],y[g=="Female"])
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","numeric","NULL","NULL","NULL","NULL","NULL","NULL"), na.strings = "?")
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","numeric","NULL","NULL","NULL","NULL","NULL","NULL"), na.strings = "?")
good = complete.cases(data)
data = data[good,]
# change into a Time-series object
data = ts(data)
plot(data, xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", type = "n")
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","numeric","NULL","NULL","NULL","character","character","character"), na.strings = "?")
View(data)
colnames(data) = c("GlblActivePwr","SubMtrng1","SubMtrng2","SubMtrng3")
good = complete.cases(data)
data = data[good,]
View(data)
points(data[colname(data)== "SubMtrng1",])
points(data[col.name(data)== "SubMtrng1",])
points(subset(data,colname(data)== "SubMtrng1")))
points(subset(data, colname(data)== "SubMtrng1"))
points(subset(data, colnames(data)== "SubMtrng1"))
x = subset(data, colnames(data)== "SubMtrng1")
View(x)
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","NULL","NULL","NULL","NULL","numeric","numeric","numeric"), na.strings = "?")
colnames(data) = c("SubMtrng1","SubMtrng2","SubMtrng3")
good = complete.cases(data)
data = data[good,]
data = ts(data)
lines(data[,1], col = "red")
points(data[,1], col = "red")
plot(data, xaxt="n", ylab ="Energy sub metering", xlab = "", type = "n")
plot(data, xaxt="n", ylab ="Energy sub metering", xlab = "", type = "n")
plot(data, xaxt="n", ylab ="Energy sub metering", xlab = "", type = "n")
points(data[,1], col = "red")
plot(data, xaxt="n", ylab ="Energy sub metering", xlab = "", type = "n")
points(data[,1], col = "red")
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","NULL","NULL","NULL","NULL","numeric","numeric","numeric"), na.strings = "?")
colnames(data) = c("SubMtrng1","SubMtrng2","SubMtrng3")
good = complete.cases(data)
data = data[good,]
# change into a Time-series object
data = ts(data)
plot(data[,1])
plot(data[,2])
plot(data[,3])
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", type = "n")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "")
lines(data[,2], col = "red")
lines(data[,3]), col = "purple")
lines(data[,3], col = "purple")
legend()
legend(data)
legend(data[,1], col = "1")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
?legend
legend(1000,30)
legend("topright")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "")
points(data[,2], col = "red",lty = 1)
points(data[,2], col = "red",lty = 2)
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","NULL","NULL","NULL","NULL","numeric","numeric","numeric"), na.strings = "?")
colnames(data) = c("SubMtrng1","SubMtrng2","SubMtrng3")
good = complete.cases(data)
data = data[good,]
# change into a Time-series object
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", lty = 1)
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", lty = 2)
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", lty = 3)
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", lty = 3)
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", lty = 4)
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", lty = 1)
x = rnorm(100)
plot(x)
plot(x,lty = 1)
plot(x,lty = 2)
length(x)
plot(1:100,x)
plot(1:100,x,lty=1)
plot(1:100,x,typ="l")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", tpy = "l")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
points(data[,2], col = "red",typ = "l")
legend("topright")
lines(data[,3], col = "purple")
legend("topright", c("a","b"), lty = c(1,1) )
legend("topright", c("a","b","c"), lty = c(1,1), col = c(1,2,3) )
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,2], col = "red")
lines(data[,3], col = "purple")
legend("topright", c("a","b","c"), lty = c(1,1), col = c(1,2,3) )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,3) )
par("mar")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,3),cex=0.75 )
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,3),cex=0.5 )
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,2], col = "red")
lines(data[,3], col = "purple")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,3),cex=0.55 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
lines(data[,3], col = "magenta")
lines(data[,3], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),cex=0.55 )
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),cex=0.65 )
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1 )
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,2], col = "red")
lines(data[,3], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,2], col = "red")
lines(data[,3], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
png(file = "plot3.png")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,2], col = "red")
lines(data[,3], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
dev.off()
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", col.names = c("Date","Time","GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3"))
View(data)
hist(data[,1], xlab = "Global Active Power (Kilowatts)", col = "red", main = "Global Active Power")
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric"), na.strings = "?")
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
colanmes(data) = c("Date","Time","GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
apply(data,as.numeric)
as.numeric
?apply
apply(data,2,as.numeric)
View(data)
data = data[,-1]
View(data)
"
colanmes(data) = c("Time","GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
colanmes(data) = c("Time","GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
colnames(data) = c("Time","GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
View(data)
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-1:2]
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
good = complete.cases(data)
data = data[good,]
data = apply(data,2,as.numeric)
data[,1:7]=apply(data[,1:7],2,as.numeric)
View(data)
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
data=apply(,2,as.numeric)
data=apply(data,2,as.numeric)
View(data)
as.numeric(data)
is.numeric(data)
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
temp = as.numeric(data)
data = apply(data,2,as.numeric)
hist(data[,1], xlab = "Global Active Power (Kilowatts)", col = "red", main = "Global Active Power")
View(data)
plot(data[,3])
plot(data[,3],typ = "l")
plot(data[,3],typ = "l", ylab = "Voltage", xlab = "datetime")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,3],typ = "l", ylab = "Voltage", xlab = "datetime", type = "n")
plot(data[,3],typ = "l", ylab = "Voltage", xlab = "datetime", xaxt = "n")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
View(data)
View(data)
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mrow=c(2,2))
hist(data[,1], xlab = "Global Active Power (Kilowatts)", col = "red", main = "Global Active Power")
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(2,2))
hist(data[,1], xlab = "Global Active Power (Kilowatts)", col = "red", main = "Global Active Power")
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
par(mfrow=1)
par(mfrow=c(1,1)
)
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par("mar")
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(1,1))
par(mfrow=c(1,1))
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .55 )
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .35 )
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=0.5,cex = .55 )
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=0.4,cex = .55 )
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=0.4,cex = .55 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
data = apply(data,2,as.numeric)
#plot the histogram in png graphics device
png(file = "plot1.png", )
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(1,1))
dev.off()
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
data = apply(data,2,as.numeric)
#plot the histogram in png graphics device
png(file = "plot4.png", )
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(1,1))
dev.off()
#Read only data corresponding to 2/1/2007 to 2/2/2007, and only column corresponding
# to "Global Active Power".
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","numeric","NULL","NULL","NULL","NULL","NULL","NULL"), na.strings = "?")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
#plot the histogram in png graphics device
png(file = "plot1.png", )
hist(data, xlab = "Global Active Power (Kilowatts)", col = "red", main = "Global Active Power")
dev.off()
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","numeric","NULL","NULL","NULL","NULL","NULL","NULL"), na.strings = "?")
good = complete.cases(data)
data = data[good,]
# change into a Time-series object
data = ts(data)
png(file = "plot2.png")
plot(data, xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
dev.off()
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", colClasses = c("NULL","NULL","NULL","NULL","NULL","NULL","numeric","numeric","numeric"), na.strings = "?")
colnames(data) = c("SubMtrng1","SubMtrng2","SubMtrng3")
good = complete.cases(data)
data = data[good,]
# change into a Time-series object
data = ts(data)
png(file = "plot3.png")
plot(data[,1], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,2], col = "red")
lines(data[,3], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
dev.off()
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
data = apply(data,2,as.numeric)
#plot the histogram in png graphics device
png(file = "plot4.png", )
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global-reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(1,1))
dev.off()
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
data = apply(data,2,as.numeric)
#plot the histogram in png graphics device
png(file = "plot4.png", )
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global_reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(1,1))
dev.off()
setwd("G:/Coursera Classes/04 Exploratory Data Analysis/Project1")
data = read.table("household_power_consumption.txt", header = TRUE, nrows=2880, skip=66636, sep =";", na.strings = "?")
data = data[,-c(1,2)]
colnames(data) = c("GlblActivePwr", "GlblReactivePwr", "Voltage", "GlblIntensity", "SubMtring1","SubMtring2","SubMtrng3")
#Remove any NAs from data set.
good = complete.cases(data)
data = data[good,]
data = apply(data,2,as.numeric)
#plot the histogram in png graphics device
png(file = "plot4.png", )
par(mfrow=c(2,2))
#Global Active Power
plot(data[,1], xaxt="n", ylab="Global Active Power (Kilowatts)", xlab = "", typ = "l")
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
#Voltage plot
plot(data[,3], xaxt = "n", typ = "l", ylab = "Voltage", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,5], xaxt="n", ylab ="Energy sub metering", xlab = "", typ = "l")
lines(data[,6], col = "red")
lines(data[,7], col = "blue")
legend("topright", c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty = c(1,1), col = c(1,2,4),pt.cex=1,cex = .75 )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
plot(data[,2], xaxt = "n", typ = "l", ylab = "Global_reactive_power", xlab = "datetime" )
axis(1, at=c(1,1440,2880), labels=c("Thu","Fri","Sat"))
par(mfrow=c(1,1))
dev.off()
